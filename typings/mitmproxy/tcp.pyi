"""
This type stub file was generated by pyright.
"""

from mitmproxy import connection, flow
from mitmproxy.coretypes import serializable

class TCPMessage(serializable.Serializable):
    """
    An individual TCP "message".
    Note that TCP is *stream-based* and not *message-based*.
    For practical purposes the stream is chunked into messages here,
    but you should not rely on message boundaries.
    """
    def __init__(self, from_client, content, timestamp=...) -> None:
        ...
    
    @classmethod
    def from_state(cls, state): # -> Self@TCPMessage:
        ...
    
    def get_state(self): # -> tuple[Unknown, Unknown, Unknown | float]:
        ...
    
    def set_state(self, state): # -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class TCPFlow(flow.Flow):
    """
    A TCPFlow is a simplified representation of a TCP session.
    """
    messages: list[TCPMessage]
    def __init__(self, client_conn: connection.Client, server_conn: connection.Server, live: bool = ...) -> None:
        ...
    
    def get_state(self) -> serializable.State:
        ...
    
    def set_state(self, state: serializable.State) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


__all__ = ["TCPFlow", "TCPMessage"]
