"""
This type stub file was generated by pyright.
"""

import asyncio
from collections.abc import Coroutine, Iterator
from contextlib import contextmanager

def create_task(coro: Coroutine, *, name: str, client: tuple | None = ...) -> asyncio.Task:
    """
    Like asyncio.create_task, but also store some debug info on the task object.
    """
    ...

def set_task_debug_info(task: asyncio.Task, *, name: str, client: tuple | None = ...) -> None:
    """Set debug info for an externally-spawned task."""
    ...

def set_current_task_debug_info(*, name: str, client: tuple | None = ...) -> None:
    """Set debug info for the current task."""
    ...

def task_repr(task: asyncio.Task) -> str:
    """Get a task representation with debug info."""
    ...

@contextmanager
def install_exception_handler(handler) -> Iterator[None]:
    ...

@contextmanager
def set_eager_task_factory() -> Iterator[None]:
    ...

