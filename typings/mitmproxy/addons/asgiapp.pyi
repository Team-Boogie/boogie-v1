"""
This type stub file was generated by pyright.
"""

from mitmproxy import http

logger = ...
class ASGIApp:
    """
    An addon that hosts an ASGI/WSGI HTTP app within mitmproxy, at a specified hostname and port.

    Some important caveats:
        - This implementation will block and wait until the entire HTTP response is completed before sending out data.
        - It currently only implements the HTTP protocol (Lifespan and WebSocket are unimplemented).
    """
    def __init__(self, asgi_app, host: str, port: int | None) -> None:
        ...
    
    @property
    def name(self) -> str:
        ...
    
    def should_serve(self, flow: http.HTTPFlow) -> bool:
        ...
    
    async def request(self, flow: http.HTTPFlow) -> None:
        ...
    


class WSGIApp(ASGIApp):
    def __init__(self, wsgi_app, host: str, port: int | None) -> None:
        ...
    


HTTP_VERSION_MAP = ...
def make_scope(flow: http.HTTPFlow) -> dict:
    ...

async def serve(app, flow: http.HTTPFlow): # -> None:
    """
    Serves app on flow.
    """
    ...

