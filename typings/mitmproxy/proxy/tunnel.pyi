"""
This type stub file was generated by pyright.
"""

from enum import Enum
from typing import Union
from mitmproxy import connection
from mitmproxy.proxy import commands, context, events, layer
from mitmproxy.proxy.layer import Layer

class TunnelState(Enum):
    INACTIVE = ...
    ESTABLISHING = ...
    OPEN = ...
    CLOSED = ...


class TunnelLayer(layer.Layer):
    """
    A specialized layer that simplifies the implementation of tunneling protocols such as SOCKS, upstream HTTP proxies,
    or TLS.
    """
    child_layer: layer.Layer
    tunnel_connection: connection.Connection
    conn: connection.Connection
    tunnel_state: TunnelState = ...
    command_to_reply_to: commands.OpenConnection | None = ...
    _event_queue: list[events.Event]
    def __init__(self, context: context.Context, tunnel_connection: connection.Connection, conn: connection.Connection) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def event_to_child(self, event: events.Event) -> layer.CommandGenerator[None]:
        ...
    
    def start_handshake(self) -> layer.CommandGenerator[None]:
        ...
    
    def receive_handshake_data(self, data: bytes) -> layer.CommandGenerator[tuple[bool, str | None]]:
        """returns a (done, err) tuple"""
        ...
    
    def on_handshake_error(self, err: str) -> layer.CommandGenerator[None]:
        """Called if either receive_handshake_data returns an error or we receive a close during handshake."""
        ...
    
    def receive_data(self, data: bytes) -> layer.CommandGenerator[None]:
        ...
    
    def receive_close(self) -> layer.CommandGenerator[None]:
        ...
    
    def send_data(self, data: bytes) -> layer.CommandGenerator[None]:
        ...
    
    def send_close(self, command: commands.CloseConnection) -> layer.CommandGenerator[None]:
        ...
    


class LayerStack:
    def __init__(self) -> None:
        ...
    
    def __getitem__(self, item: int) -> Layer:
        ...
    
    def __truediv__(self, other: Union[Layer, LayerStack]) -> LayerStack:
        ...
    


