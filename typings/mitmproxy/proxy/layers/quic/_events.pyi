"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from mitmproxy import connection
from mitmproxy.proxy import events

@dataclass
class QuicStreamEvent(events.ConnectionEvent):
    """Base class for all QUIC stream events."""
    stream_id: int
    ...


@dataclass
class QuicStreamDataReceived(QuicStreamEvent):
    """Event that is fired whenever data is received on a stream."""
    data: bytes
    end_stream: bool
    def __repr__(self): # -> str:
        ...
    


@dataclass
class QuicStreamReset(QuicStreamEvent):
    """Event that is fired when the remote peer resets a stream."""
    error_code: int
    ...


@dataclass
class QuicStreamStopSending(QuicStreamEvent):
    """Event that is fired when the remote peer sends a STOP_SENDING frame."""
    error_code: int
    ...


class QuicConnectionClosed(events.ConnectionClosed):
    """QUIC connection has been closed."""
    error_code: int
    frame_type: int | None
    reason_phrase: str
    def __init__(self, conn: connection.Connection, error_code: int, frame_type: int | None, reason_phrase: str) -> None:
        ...
    


