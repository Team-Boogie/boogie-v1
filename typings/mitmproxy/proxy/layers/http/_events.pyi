"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from ._base import HttpEvent
from mitmproxy import http
from mitmproxy.http import HTTPFlow

@dataclass
class RequestHeaders(HttpEvent):
    request: http.Request
    end_stream: bool
    replay_flow: HTTPFlow | None = ...


@dataclass
class ResponseHeaders(HttpEvent):
    response: http.Response
    end_stream: bool = ...


@dataclass
class RequestData(HttpEvent):
    data: bytes
    def __init__(self, stream_id: int, data: bytes) -> None:
        ...
    


@dataclass
class ResponseData(HttpEvent):
    data: bytes
    def __init__(self, stream_id: int, data: bytes) -> None:
        ...
    


@dataclass
class RequestTrailers(HttpEvent):
    trailers: http.Headers
    def __init__(self, stream_id: int, trailers: http.Headers) -> None:
        ...
    


@dataclass
class ResponseTrailers(HttpEvent):
    trailers: http.Headers
    def __init__(self, stream_id: int, trailers: http.Headers) -> None:
        ...
    


@dataclass
class RequestEndOfMessage(HttpEvent):
    def __init__(self, stream_id: int) -> None:
        ...
    


@dataclass
class ResponseEndOfMessage(HttpEvent):
    def __init__(self, stream_id: int) -> None:
        ...
    


@dataclass
class RequestProtocolError(HttpEvent):
    message: str
    code: int = ...
    def __init__(self, stream_id: int, message: str, code: int = ...) -> None:
        ...
    


@dataclass
class ResponseProtocolError(HttpEvent):
    message: str
    code: int = ...
    def __init__(self, stream_id: int, message: str, code: int = ...) -> None:
        ...
    


__all__ = ["HttpEvent", "RequestHeaders", "RequestData", "RequestEndOfMessage", "ResponseHeaders", "ResponseData", "RequestTrailers", "ResponseTrailers", "ResponseEndOfMessage", "RequestProtocolError", "ResponseProtocolError"]
