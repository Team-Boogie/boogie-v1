"""
This type stub file was generated by pyright.
"""

import collections
import h2.config
import h2.connection
from typing import NamedTuple

logger = ...
class H2ConnectionLogger(h2.config.DummyLogger):
    def __init__(self, peername: tuple, conn_type: str) -> None:
        ...
    
    def debug(self, fmtstr, *args): # -> None:
        ...
    
    def trace(self, fmtstr, *args): # -> None:
        ...
    


class SendH2Data(NamedTuple):
    data: bytes
    end_stream: bool
    ...


class BufferedH2Connection(h2.connection.H2Connection):
    """
    This class wrap's hyper-h2's H2Connection and adds internal send buffers.

    To simplify implementation, padding is unsupported.
    """
    stream_buffers: collections.defaultdict[int, collections.deque[SendH2Data]]
    stream_trailers: dict[int, list[tuple[bytes, bytes]]]
    def __init__(self, config: h2.config.H2Configuration) -> None:
        ...
    
    def initiate_connection(self): # -> None:
        ...
    
    def send_data(self, stream_id: int, data: bytes, end_stream: bool = ..., pad_length: None = ...) -> None:
        """
        Send data on a given stream.

        In contrast to plain hyper-h2, this method will not raise if the data cannot be sent immediately.
        Data is split up and buffered internally.
        """
        ...
    
    def send_trailers(self, stream_id: int, trailers: list[tuple[bytes, bytes]]): # -> None:
        ...
    
    def end_stream(self, stream_id: int) -> None:
        ...
    
    def reset_stream(self, stream_id: int, error_code: int = ...) -> None:
        ...
    
    def receive_data(self, data: bytes): # -> list[Unknown]:
        ...
    
    def stream_window_updated(self, stream_id: int) -> bool:
        """
        The window for a specific stream has updated. Send as much buffered data as possible.
        """
        ...
    
    def connection_window_updated(self) -> None:
        """
        The connection window has updated. Send data from buffers in a round-robin fashion.
        """
        ...
    


