"""
This type stub file was generated by pyright.
"""

import kaitaistruct
from kaitaistruct import KaitaiStruct

if getattr(kaitaistruct, 'API_VERSION', (0, 9)) < (0, 9):
    ...
class VlqBase128Le(KaitaiStruct):
    """A variable-length unsigned/signed integer using base128 encoding. 1-byte groups
    consist of 1-bit flag of continuation and 7-bit value chunk, and are ordered
    "least significant group first", i.e. in "little-endian" manner.
    
    This particular encoding is specified and used in:
    
    * DWARF debug file format, where it's dubbed "unsigned LEB128" or "ULEB128".
      http://dwarfstd.org/doc/dwarf-2.0.0.pdf - page 139
    * Google Protocol Buffers, where it's called "Base 128 Varints".
      https://developers.google.com/protocol-buffers/docs/encoding?csw=1#varints
    * Apache Lucene, where it's called "VInt"
      https://lucene.apache.org/core/3_5_0/fileformats.html#VInt
    * Apache Avro uses this as a basis for integer encoding, adding ZigZag on
      top of it for signed ints
      https://avro.apache.org/docs/current/spec.html#binary_encode_primitive
    
    More information on this encoding is available at https://en.wikipedia.org/wiki/LEB128
    
    This particular implementation supports serialized values to up 8 bytes long.
    """
    def __init__(self, _io, _parent=..., _root=...) -> None:
        ...
    
    class Group(KaitaiStruct):
        """One byte group, clearly divided into 7-bit "value" chunk and 1-bit "continuation" flag.
        """
        def __init__(self, _io, _parent=..., _root=...) -> None:
            ...
        
        @property
        def has_next(self): # -> Any | None:
            """If true, then we have more bytes to read."""
            ...
        
        @property
        def value(self): # -> Any | None:
            """The 7-bit (base128) numeric value chunk of this group."""
            ...
        
    
    
    @property
    def len(self): # -> int | Any | None:
        ...
    
    @property
    def value(self): # -> Any | None:
        """Resulting unsigned value as normal integer."""
        ...
    
    @property
    def sign_bit(self): # -> Any | None:
        ...
    
    @property
    def value_signed(self): # -> Any | None:
        """
        .. seealso::
           Source - https://graphics.stanford.edu/~seander/bithacks.html#VariableSignExtend
        """
        ...
    


