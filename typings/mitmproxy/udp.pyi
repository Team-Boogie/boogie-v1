"""
This type stub file was generated by pyright.
"""

from mitmproxy import connection, flow
from mitmproxy.coretypes import serializable

class UDPMessage(serializable.Serializable):
    """
    An individual UDP datagram.
    """
    def __init__(self, from_client, content, timestamp=...) -> None:
        ...
    
    @classmethod
    def from_state(cls, state): # -> Self@UDPMessage:
        ...
    
    def get_state(self): # -> tuple[Unknown, Unknown, Unknown | float]:
        ...
    
    def set_state(self, state): # -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class UDPFlow(flow.Flow):
    """
    A UDPFlow is a representation of a UDP session.
    """
    messages: list[UDPMessage]
    def __init__(self, client_conn: connection.Client, server_conn: connection.Server, live: bool = ...) -> None:
        ...
    
    def get_state(self) -> serializable.State:
        ...
    
    def set_state(self, state: serializable.State) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


__all__ = ["UDPFlow", "UDPMessage"]
