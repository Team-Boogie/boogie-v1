"""
This type stub file was generated by pyright.
"""

from .baseclient import BaseClient
from typing import TypedDict

Button = TypedDict("Button", {"label": str, "url": str})

JSON = str | int | float | bool | None | dict[str, "JSON"] | list["JSON"]

class Presence(BaseClient):
    def __init__(self, *args, **kwargs) -> None: ...
    def update(
        self,
        pid: int = ...,
        state: str = None,
        details: str = None,
        start: int = None,
        end: int = None,
        large_image: str = None,
        large_text: str = None,
        small_image: str = None,
        small_text: str = None,
        party_id: str = None,
        party_size: tuple[int, int] = None,
        join: str = None,
        spectate: str = None,
        match: str = None,
        buttons: list[Button] = None,
        instance: bool = True,
        payload_override: dict[str, JSON] = None,
    ) -> JSON: ...
    def clear(self, pid: int = ...): ...
    def connect(self) -> None: ...
    def close(self):  # -> None:
        ...

class AioPresence(BaseClient):
    def __init__(self, *args, **kwargs) -> None: ...
    async def update(
        self,
        pid: int = ...,
        state: str = ...,
        details: str = ...,
        start: int = ...,
        end: int = ...,
        large_image: str = ...,
        large_text: str = ...,
        small_image: str = ...,
        small_text: str = ...,
        party_id: str = ...,
        party_size: tuple[int, int] = ...,
        join: str = ...,
        spectate: str = ...,
        match: str = ...,
        buttons: list[Button] = ...,
        instance: bool = ...,
    ) -> JSON: ...
    async def clear(self, pid: int = ...):  # -> Any:
        ...

    async def connect(self) -> None: ...
    def close(self):  # -> None:
        ...
