"""
This type stub file was generated by pyright.
"""

import contextlib
from typing import ClassVar, ContextManager
from setuptools import Command
from cx_Freeze._compat import IS_MINGW, IS_WINDOWS
from _msi import _Database

"""Implements the 'bdist_msi' command (create Windows installer packages)."""
__all__ = ["bdist_msi"]
if IS_MINGW or IS_WINDOWS:
    @contextlib.contextmanager
    def suppress_known_deprecation() -> ContextManager:
        ...
    
class bdist_msi(Command):
    """Create a Microsoft Installer (.msi) binary distribution."""
    all_users: bool
    upgrade_code: str | None
    install_icon: str | None
    db: _Database | None
    description = ...
    user_options: ClassVar[list[tuple[str, str | None, str]]] = ...
    boolean_options: ClassVar[list[str]] = ...
    y = ...
    width = ...
    height = ...
    title = ...
    modeless = ...
    modal = ...
    _binary_columns: ClassVar[dict[str, int]] = ...
    def add_config(self) -> None:
        ...
    
    def add_cancel_dialog(self) -> None:
        ...
    
    def add_error_dialog(self) -> None:
        ...
    
    def add_exit_dialog(self) -> None:
        ...
    
    def add_fatal_error_dialog(self) -> None:
        ...
    
    def add_files(self) -> None:
        ...
    
    def add_files_in_use_dialog(self) -> None:
        ...
    
    def add_maintenance_type_dialog(self) -> None:
        ...
    
    def add_prepare_dialog(self) -> None:
        ...
    
    def add_progress_dialog(self) -> None:
        ...
    
    def add_properties(self) -> None:
        ...
    
    def add_select_directory_dialog(self) -> None:
        ...
    
    def add_text_styles(self) -> None:
        ...
    
    def add_ui(self) -> None:
        ...
    
    def add_upgrade_config(self, sversion) -> None:
        ...
    
    def add_user_exit_dialog(self) -> None:
        ...
    
    def add_license_dialog(self) -> None:
        ...
    
    def add_wait_for_costing_dialog(self) -> None:
        ...
    
    def initialize_options(self) -> None:
        ...
    
    def finalize_options(self) -> None:
        ...
    
    def run(self) -> None:
        ...
    


