"""
This type stub file was generated by pyright.
"""

from pathlib import Path
from typing import TYPE_CHECKING
from cx_Freeze.finder import ModuleFinder
from cx_Freeze.module import Module

"""A collection of functions which are the base to hooks for PyQt5, PyQt6,
PySide2 and PySide6.
"""
if TYPE_CHECKING:
    ...
def get_qt_paths(name: str, variable: str) -> tuple[Path, Path]:
    """Helper function to get the source and target path of Qt variable."""
    ...

def get_qt_plugins_paths(name: str, plugins: str) -> list[tuple[Path, Path]]:
    """Helper function to get a list of source and target paths of Qt plugins,
    indicated to be used in include_files.
    """
    ...

def copy_qt_files(finder: ModuleFinder, name: str, variable: str, arg: str) -> None:
    """Helper function to copy Qt plugins, resources, translations, etc."""
    ...

def load_qt_phonon(finder: ModuleFinder, module: Module) -> None:
    """In Windows, phonon5.dll requires an additional dll phonon_ds94.dll to
    be present in the build directory inside a folder phonon_backend.
    """
    ...

def load_qt_qt3dinput(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qt3drender(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtbluetooth(finder: ModuleFinder, module: Module) -> None:
    """Include translations for the module."""
    ...

def load_qt_qtcore(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtdesigner(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtgui(finder: ModuleFinder, module: Module) -> None:
    """There is a chance that QtGui will use some image formats, then, add the
    image format plugins.
    """
    ...

def load_qt_qtlocation(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtmultimedia(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtnetwork(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtpositioning(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtprintsupport(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtqml(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtquick(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtquick3d(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtscript(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtscxml(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtsensors(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtserialbus(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtserialport(finder: ModuleFinder, module: Module) -> None:
    """Include translations for the module."""
    ...

def load_qt_qtsql(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qttexttospeech(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtvirtualkeyboard(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_qtwebenginecore(finder: ModuleFinder, module: Module) -> None:
    """Include module dependency and QtWebEngineProcess files."""
    ...

def load_qt_qtwebenginewidgets(finder: ModuleFinder, module: Module) -> None:
    """Include data and plugins for the module."""
    ...

def load_qt_qtwebsockets(finder: ModuleFinder, module: Module) -> None:
    """Include translations for the module."""
    ...

def load_qt_qtwidgets(finder: ModuleFinder, module: Module) -> None:
    """Include plugins for the module."""
    ...

def load_qt_uic(finder: ModuleFinder, module: Module) -> None:
    """The uic module makes use of "plugins" that need to be read directly and
    cannot be frozen; the PyQt5.QtWebKit and PyQt5.QtNetwork modules are
    also implicity loaded.
    """
    ...

