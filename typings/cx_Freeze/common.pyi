"""
This type stub file was generated by pyright.
"""

from pathlib import Path
from types import CodeType
from typing import TYPE_CHECKING
from cx_Freeze._typing import IncludesList, InternalIncludesList

"""Common utility functions shared between cx_Freeze modules."""
if TYPE_CHECKING:
    ...
def get_resource_file_path(dirname: str | Path, name: str | Path, ext: str) -> Path | None:
    """Return the path to a resource file shipped with cx_Freeze.

    This is used to find our base executables and initscripts when they are
    just specified by name.
    """
    ...

def normalize_to_list(value: str | list[str] | tuple[str, ...] | None) -> list[str]:
    """Takes the different formats of options containing multiple values and
    returns the value as a list object.
    """
    ...

def process_path_specs(specs: IncludesList | None) -> InternalIncludesList:
    """Prepare paths specified as config.

    The input is a list of either strings, or 2-tuples (source, target).
    Where single strings are supplied, the basenames are used as targets.
    Where targets are given explicitly, they must not be absolute paths.

    Returns a list of 2-tuples, or throws OptionError if something is wrong
    in the input.
    """
    ...

def code_object_replace(code: CodeType, **kwargs) -> CodeType:
    """Return a copy of the code object with new values for the specified
    fields.
    """
    ...

def code_object_replace_function(code: CodeType, name: str, source: str) -> CodeType:
    """Return a copy of the code object with the function 'name' replaced."""
    ...

