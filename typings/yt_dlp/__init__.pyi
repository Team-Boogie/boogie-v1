"""
This type stub file was generated by pyright.
"""

import sys
import collections
import getpass
import itertools
import optparse
import os
import re
import traceback
from .cookies import CookieLoadError, SUPPORTED_BROWSERS, SUPPORTED_KEYRINGS
from .downloader.external import get_external_downloader
from .extractor import gen_extractors, list_extractor_classes, list_extractors
from .extractor.adobepass import MSO_INFO
from .networking.impersonate import ImpersonateTarget
from .options import parseOpts
from .postprocessor import FFmpegExtractAudioPP, FFmpegMergerPP, FFmpegPostProcessor, FFmpegSubtitlesConvertorPP, FFmpegThumbnailsConvertorPP, FFmpegVideoConvertorPP, FFmpegVideoRemuxerPP, MetadataFromFieldPP, MetadataParserPP
from .update import Updater
from .utils import Config, DateRange, DownloadCancelled, DownloadError, FormatSorter, GeoUtils, NO_DEFAULT, POSTPROCESS_WHEN, PlaylistEntries, SameFileError, download_range_func, expand_path, float_or_none, format_field, int_or_none, join_nonempty, match_filter_func, parse_bytes, parse_duration, preferredencoding, read_batch_urls, read_stdin, render_table, setproctitle, shell_quote, traverse_obj, variadic, write_string
from .utils.networking import std_headers
from .utils._utils import _UnsafeExtensionError
from .YoutubeDL import YoutubeDL

if sys.version_info < (3, 9):
    ...
__license__ = ...
_IN_CLI = ...
def get_urls(urls, batchfile, verbose): # -> list[str | Unknown]:
    """
    @param verbose      -1: quiet, 0: normal, 1: verbose
    """
    ...

def print_extractor_information(opts, urls): # -> bool:
    ...

def set_compat_opts(opts): # -> None:
    ...

def validate_options(opts): # -> tuple[list[Unknown], list[Unknown]]:
    ...

def get_postprocessors(opts): # -> Generator[Unknown | dict[str, Unknown] | dict[str, str], Unknown, None]:
    ...

ParsedOptions = ...
def parse_options(argv=...): # -> ParsedOptions:
    """@returns ParsedOptions(parser, opts, urls, ydl_opts)"""
    ...

def main(argv=...): # -> None:
    ...

__all__ = ['YoutubeDL', 'gen_extractors', 'list_extractors', 'main', 'parse_options']
