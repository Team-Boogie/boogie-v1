"""
This type stub file was generated by pyright.
"""

import http.client
import ssl
import urllib.request
import urllib.response
from ._helper import InstanceStoreMixin
from .common import RequestHandler, Response, register_rh
from .exceptions import SSLError
from ..dependencies import brotli

SUPPORTED_ENCODINGS = ...
CONTENT_DECODE_ERRORS = ...
if brotli:
    ...
class HTTPHandler(urllib.request.AbstractHTTPHandler):
    """Handler for HTTP requests and responses.

    This class, when installed with an OpenerDirector, automatically adds
    the standard headers to every HTTP request and handles gzipped, deflated and
    brotli responses from web servers.

    Part of this code was copied from:

    http://techknack.net/python-urllib2-handlers/

    Andrew Rowls, the author of that code, agreed to release it to the
    public domain.
    """
    def __init__(self, context=..., source_address=..., *args, **kwargs) -> None:
        ...
    
    def http_open(self, req): # -> HTTPResponse:
        ...
    
    def https_open(self, req): # -> HTTPResponse:
        ...
    
    @staticmethod
    def deflate(data): # -> bytes:
        ...
    
    @staticmethod
    def brotli(data):
        ...
    
    @staticmethod
    def gz(data): # -> bytes:
        ...
    
    def http_request(self, req): # -> Request:
        ...
    
    def http_response(self, req, resp):
        ...
    
    https_request = ...
    https_response = ...


def make_socks_conn_class(base_class, socks_proxy): # -> type[SocksConnection]:
    class SocksConnection(base_class):
        ...
    
    

class RedirectHandler(urllib.request.HTTPRedirectHandler):
    """YoutubeDL redirect handler

    The code is based on HTTPRedirectHandler implementation from CPython [1].

    This redirect handler fixes and improves the logic to better align with RFC7261
     and what browsers tend to do [2][3]

    1. https://github.com/python/cpython/blob/master/Lib/urllib/request.py
    2. https://datatracker.ietf.org/doc/html/rfc7231
    3. https://github.com/python/cpython/issues/91306
    """
    http_error_308 = ...
    def redirect_request(self, req, fp, code, msg, headers, newurl): # -> Request:
        ...
    


class ProxyHandler(urllib.request.BaseHandler):
    handler_order = ...
    def __init__(self, proxies=...) -> None:
        ...
    
    def proxy_open(self, req): # -> Any | None:
        ...
    


class PUTRequest(urllib.request.Request):
    def get_method(self): # -> Literal['PUT']:
        ...
    


class HEADRequest(urllib.request.Request):
    def get_method(self): # -> Literal['HEAD']:
        ...
    


def update_Request(req, url=..., data=..., headers=..., query=...): # -> HEADRequest | PUTRequest | Request:
    ...

class UrllibResponseAdapter(Response):
    """
    HTTP Response adapter class for urllib addinfourl and http.client.HTTPResponse
    """
    def __init__(self, res: http.client.HTTPResponse | urllib.response.addinfourl) -> None:
        ...
    
    def read(self, amt=...): # -> Any:
        ...
    


def handle_sslerror(e: ssl.SSLError): # -> None:
    ...

def handle_response_read_exceptions(e): # -> None:
    ...

@register_rh
class UrllibRH(RequestHandler, InstanceStoreMixin):
    _SUPPORTED_URL_SCHEMES = ...
    _SUPPORTED_PROXY_SCHEMES = ...
    _SUPPORTED_FEATURES = ...
    RH_NAME = ...
    def __init__(self, *, enable_file_urls: bool = ..., **kwargs) -> None:
        ...
    


