"""
This type stub file was generated by pyright.
"""

import typing
from ..utils import YoutubeDLError
from .common import RequestHandler, Response

if typing.TYPE_CHECKING:
    ...
class RequestError(YoutubeDLError):
    def __init__(self, msg: str | None = ..., cause: Exception | str | None = ..., handler: RequestHandler = ...) -> None:
        ...
    


class UnsupportedRequest(RequestError):
    """raised when a handler cannot handle a request"""
    ...


class NoSupportingHandlers(RequestError):
    """raised when no handlers can support a request for various reasons"""
    def __init__(self, unsupported_errors: list[UnsupportedRequest], unexpected_errors: list[Exception]) -> None:
        ...
    


class TransportError(RequestError):
    """Network related errors"""
    ...


class HTTPError(RequestError):
    def __init__(self, response: Response, redirect_loop=...) -> None:
        ...
    
    def close(self): # -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class IncompleteRead(TransportError):
    def __init__(self, partial: int, expected: int | None = ..., **kwargs) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class SSLError(TransportError):
    ...


class CertificateVerifyError(SSLError):
    """Raised when certificate validated has failed"""
    ...


class ProxyError(TransportError):
    ...


network_exceptions = ...
